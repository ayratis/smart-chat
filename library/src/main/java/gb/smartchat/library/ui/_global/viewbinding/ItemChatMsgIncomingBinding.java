// Generated by view binder compiler. Do not edit!
package gb.smartchat.library.ui._global.viewbinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;

import gb.smartchat.R;

public final class ItemChatMsgIncomingBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final LinearLayout content;

  @NonNull
  public final ImageView ivAttachmentPhoto;

  @NonNull
  public final ImageView ivAvatar;

  @NonNull
  public final ImageView ivDocIcon;

  @NonNull
  public final ProgressBar progressBarFile;

  @NonNull
  public final TextView tvContent;

  @NonNull
  public final TextView tvDocName;

  @NonNull
  public final TextView tvDocSize;

  @NonNull
  public final TextView tvEdited;

  @NonNull
  public final TextView tvQuotedMessage;

  @NonNull
  public final TextView tvQuotedPerson;

  @NonNull
  public final TextView tvSenderName;

  @NonNull
  public final TextView tvTime;

  @NonNull
  public final RelativeLayout viewDocAttachment;

  @NonNull
  public final LinearLayout viewQuotedMessage;

  private ItemChatMsgIncomingBinding(@NonNull FrameLayout rootView, @NonNull LinearLayout content,
      @NonNull ImageView ivAttachmentPhoto, @NonNull ImageView ivAvatar,
      @NonNull ImageView ivDocIcon, @NonNull ProgressBar progressBarFile,
      @NonNull TextView tvContent, @NonNull TextView tvDocName, @NonNull TextView tvDocSize,
      @NonNull TextView tvEdited, @NonNull TextView tvQuotedMessage,
      @NonNull TextView tvQuotedPerson, @NonNull TextView tvSenderName, @NonNull TextView tvTime,
      @NonNull RelativeLayout viewDocAttachment, @NonNull LinearLayout viewQuotedMessage) {
    this.rootView = rootView;
    this.content = content;
    this.ivAttachmentPhoto = ivAttachmentPhoto;
    this.ivAvatar = ivAvatar;
    this.ivDocIcon = ivDocIcon;
    this.progressBarFile = progressBarFile;
    this.tvContent = tvContent;
    this.tvDocName = tvDocName;
    this.tvDocSize = tvDocSize;
    this.tvEdited = tvEdited;
    this.tvQuotedMessage = tvQuotedMessage;
    this.tvQuotedPerson = tvQuotedPerson;
    this.tvSenderName = tvSenderName;
    this.tvTime = tvTime;
    this.viewDocAttachment = viewDocAttachment;
    this.viewQuotedMessage = viewQuotedMessage;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemChatMsgIncomingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemChatMsgIncomingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_chat_msg_incoming, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemChatMsgIncomingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.content;
      LinearLayout content = rootView.findViewById(id);
      if (content == null) {
        break missingId;
      }

      id = R.id.iv_attachment_photo;
      ImageView ivAttachmentPhoto = rootView.findViewById(id);
      if (ivAttachmentPhoto == null) {
        break missingId;
      }

      id = R.id.iv_avatar;
      ImageView ivAvatar = rootView.findViewById(id);
      if (ivAvatar == null) {
        break missingId;
      }

      id = R.id.iv_doc_icon;
      ImageView ivDocIcon = rootView.findViewById(id);
      if (ivDocIcon == null) {
        break missingId;
      }

      id = R.id.progress_bar_file;
      ProgressBar progressBarFile = rootView.findViewById(id);
      if (progressBarFile == null) {
        break missingId;
      }

      id = R.id.tv_content;
      TextView tvContent = rootView.findViewById(id);
      if (tvContent == null) {
        break missingId;
      }

      id = R.id.tv_doc_name;
      TextView tvDocName = rootView.findViewById(id);
      if (tvDocName == null) {
        break missingId;
      }

      id = R.id.tv_doc_size;
      TextView tvDocSize = rootView.findViewById(id);
      if (tvDocSize == null) {
        break missingId;
      }

      id = R.id.tv_edited;
      TextView tvEdited = rootView.findViewById(id);
      if (tvEdited == null) {
        break missingId;
      }

      id = R.id.tv_quoted_message;
      TextView tvQuotedMessage = rootView.findViewById(id);
      if (tvQuotedMessage == null) {
        break missingId;
      }

      id = R.id.tv_quoted_person;
      TextView tvQuotedPerson = rootView.findViewById(id);
      if (tvQuotedPerson == null) {
        break missingId;
      }

      id = R.id.tv_sender_name;
      TextView tvSenderName = rootView.findViewById(id);
      if (tvSenderName == null) {
        break missingId;
      }

      id = R.id.tv_time;
      TextView tvTime = rootView.findViewById(id);
      if (tvTime == null) {
        break missingId;
      }

      id = R.id.view_doc_attachment;
      RelativeLayout viewDocAttachment = rootView.findViewById(id);
      if (viewDocAttachment == null) {
        break missingId;
      }

      id = R.id.view_quoted_message;
      LinearLayout viewQuotedMessage = rootView.findViewById(id);
      if (viewQuotedMessage == null) {
        break missingId;
      }

      return new ItemChatMsgIncomingBinding((FrameLayout) rootView, content, ivAttachmentPhoto,
          ivAvatar, ivDocIcon, progressBarFile, tvContent, tvDocName, tvDocSize, tvEdited,
          tvQuotedMessage, tvQuotedPerson, tvSenderName, tvTime, viewDocAttachment,
          viewQuotedMessage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
